/* soapServer.cpp
   Generated by gSOAP 2.8.3 from ../userservice.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapServer.cpp ver 2.8.3 2012-06-24 15:34:52 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap *soap)
{
#ifndef WITH_FASTCGI
	unsigned int k = soap->max_keep_alive;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (soap->max_keep_alive > 0 && !--k)
			soap->keep_alive = 0;
#endif
		if (soap_begin_serve(soap))
		{	if (soap->error >= SOAP_STOP)
				continue;
			return soap->error;
		}
		if (soap_serve_request(soap) || (soap->fserveloop && soap->fserveloop(soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(soap);
#else
			return soap_send_fault(soap);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(soap);
		soap_end(soap);
	} while (1);
#else
	} while (soap->keep_alive);
#endif
	return SOAP_OK;
}

#ifndef WITH_NOSERVEREQUEST
SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap *soap)
{
	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "ns2:UserInfoRequest"))
		return soap_serve___ns1__GetUserInfo(soap);
	if (!soap_match_tag(soap, soap->tag, "ns2:UserDeletionRequest"))
		return soap_serve___ns1__DeleteUser(soap);
	if (!soap_match_tag(soap, soap->tag, "ns2:UserCreationRequest"))
		return soap_serve___ns1__CreateUser(soap);
	if (!soap_match_tag(soap, soap->tag, "ns2:GroupCreationRequest"))
		return soap_serve___ns1__CreateGroup(soap);
	if (!soap_match_tag(soap, soap->tag, "ns2:GroupDeletionRequest"))
		return soap_serve___ns1__DeleteGroup(soap);
	if (!soap_match_tag(soap, soap->tag, "ns2:GroupAddUserRequest"))
		return soap_serve___ns1__GroupAddUser(soap);
	if (!soap_match_tag(soap, soap->tag, "ns2:GroupDeleteUserRequest"))
		return soap_serve___ns1__GroupDeleteUser(soap);
	if (!soap_match_tag(soap, soap->tag, "ns2:GroupInfoRequest"))
		return soap_serve___ns1__GetGroupInfo(soap);
	return soap->error = SOAP_NO_METHOD;
}
#endif

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GetUserInfo(struct soap *soap)
{	struct __ns1__GetUserInfo soap_tmp___ns1__GetUserInfo;
	_ns2__UserInfo ns2__UserInfo;
	ns2__UserInfo.soap_default(soap);
	soap_default___ns1__GetUserInfo(soap, &soap_tmp___ns1__GetUserInfo);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__GetUserInfo(soap, &soap_tmp___ns1__GetUserInfo, "-ns1:GetUserInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__GetUserInfo(soap, soap_tmp___ns1__GetUserInfo.ns2__UserInfoRequest, &ns2__UserInfo);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns2__UserInfo.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns2__UserInfo.soap_put(soap, "ns2:UserInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns2__UserInfo.soap_put(soap, "ns2:UserInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__DeleteUser(struct soap *soap)
{	struct __ns1__DeleteUser soap_tmp___ns1__DeleteUser;
	_ns2__UserDeletionResponse ns2__UserDeletionResponse;
	ns2__UserDeletionResponse.soap_default(soap);
	soap_default___ns1__DeleteUser(soap, &soap_tmp___ns1__DeleteUser);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__DeleteUser(soap, &soap_tmp___ns1__DeleteUser, "-ns1:DeleteUser", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__DeleteUser(soap, soap_tmp___ns1__DeleteUser.ns2__UserDeletionRequest, &ns2__UserDeletionResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns2__UserDeletionResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns2__UserDeletionResponse.soap_put(soap, "ns2:UserDeletionResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns2__UserDeletionResponse.soap_put(soap, "ns2:UserDeletionResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__CreateUser(struct soap *soap)
{	struct __ns1__CreateUser soap_tmp___ns1__CreateUser;
	_ns2__UserCreationResponse ns2__UserCreationResponse;
	ns2__UserCreationResponse.soap_default(soap);
	soap_default___ns1__CreateUser(soap, &soap_tmp___ns1__CreateUser);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__CreateUser(soap, &soap_tmp___ns1__CreateUser, "-ns1:CreateUser", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__CreateUser(soap, soap_tmp___ns1__CreateUser.ns2__UserCreationRequest, &ns2__UserCreationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns2__UserCreationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns2__UserCreationResponse.soap_put(soap, "ns2:UserCreationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns2__UserCreationResponse.soap_put(soap, "ns2:UserCreationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__CreateGroup(struct soap *soap)
{	struct __ns1__CreateGroup soap_tmp___ns1__CreateGroup;
	_ns2__GroupCreationResponse ns2__GroupCreationResponse;
	ns2__GroupCreationResponse.soap_default(soap);
	soap_default___ns1__CreateGroup(soap, &soap_tmp___ns1__CreateGroup);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__CreateGroup(soap, &soap_tmp___ns1__CreateGroup, "-ns1:CreateGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__CreateGroup(soap, soap_tmp___ns1__CreateGroup.ns2__GroupCreationRequest, &ns2__GroupCreationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns2__GroupCreationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns2__GroupCreationResponse.soap_put(soap, "ns2:GroupCreationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns2__GroupCreationResponse.soap_put(soap, "ns2:GroupCreationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__DeleteGroup(struct soap *soap)
{	struct __ns1__DeleteGroup soap_tmp___ns1__DeleteGroup;
	_ns2__GroupDeletionResponse ns2__GroupDeletionResponse;
	ns2__GroupDeletionResponse.soap_default(soap);
	soap_default___ns1__DeleteGroup(soap, &soap_tmp___ns1__DeleteGroup);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__DeleteGroup(soap, &soap_tmp___ns1__DeleteGroup, "-ns1:DeleteGroup", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__DeleteGroup(soap, soap_tmp___ns1__DeleteGroup.ns2__GroupDeletionRequest, &ns2__GroupDeletionResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns2__GroupDeletionResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns2__GroupDeletionResponse.soap_put(soap, "ns2:GroupDeletionResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns2__GroupDeletionResponse.soap_put(soap, "ns2:GroupDeletionResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GroupAddUser(struct soap *soap)
{	struct __ns1__GroupAddUser soap_tmp___ns1__GroupAddUser;
	_ns2__GroupAddUserResponse ns2__GroupAddUserResponse;
	ns2__GroupAddUserResponse.soap_default(soap);
	soap_default___ns1__GroupAddUser(soap, &soap_tmp___ns1__GroupAddUser);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__GroupAddUser(soap, &soap_tmp___ns1__GroupAddUser, "-ns1:GroupAddUser", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__GroupAddUser(soap, soap_tmp___ns1__GroupAddUser.ns2__GroupAddUserRequest, &ns2__GroupAddUserResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns2__GroupAddUserResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns2__GroupAddUserResponse.soap_put(soap, "ns2:GroupAddUserResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns2__GroupAddUserResponse.soap_put(soap, "ns2:GroupAddUserResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GroupDeleteUser(struct soap *soap)
{	struct __ns1__GroupDeleteUser soap_tmp___ns1__GroupDeleteUser;
	_ns2__GroupDeleteUserResponse ns2__GroupDeleteUserResponse;
	ns2__GroupDeleteUserResponse.soap_default(soap);
	soap_default___ns1__GroupDeleteUser(soap, &soap_tmp___ns1__GroupDeleteUser);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__GroupDeleteUser(soap, &soap_tmp___ns1__GroupDeleteUser, "-ns1:GroupDeleteUser", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__GroupDeleteUser(soap, soap_tmp___ns1__GroupDeleteUser.ns2__GroupDeleteUserRequest, &ns2__GroupDeleteUserResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns2__GroupDeleteUserResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns2__GroupDeleteUserResponse.soap_put(soap, "ns2:GroupDeleteUserResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns2__GroupDeleteUserResponse.soap_put(soap, "ns2:GroupDeleteUserResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GetGroupInfo(struct soap *soap)
{	struct __ns1__GetGroupInfo soap_tmp___ns1__GetGroupInfo;
	_ns2__GroupInfoResponse ns2__GroupInfoResponse;
	ns2__GroupInfoResponse.soap_default(soap);
	soap_default___ns1__GetGroupInfo(soap, &soap_tmp___ns1__GetGroupInfo);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__GetGroupInfo(soap, &soap_tmp___ns1__GetGroupInfo, "-ns1:GetGroupInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__GetGroupInfo(soap, soap_tmp___ns1__GetGroupInfo.ns2__GroupInfoRequest, &ns2__GroupInfoResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns2__GroupInfoResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns2__GroupInfoResponse.soap_put(soap, "ns2:GroupInfoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns2__GroupInfoResponse.soap_put(soap, "ns2:GroupInfoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapServer.cpp */

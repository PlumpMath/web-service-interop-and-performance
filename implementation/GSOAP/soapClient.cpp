/* soapClient.cpp
   Generated by gSOAP 2.8.3 from ../userservice.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.8.3 2012-06-24 15:34:52 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetUserInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__UserInfoRequest *ns2__UserInfoRequest, _ns2__UserInfo *ns2__UserInfo)
{	struct __ns1__GetUserInfo soap_tmp___ns1__GetUserInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:9000/userservice";
	if (!soap_action)
		soap_action = "http://localhost:9000/GetUserInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetUserInfo.ns2__UserInfoRequest = ns2__UserInfoRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GetUserInfo(soap, &soap_tmp___ns1__GetUserInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetUserInfo(soap, &soap_tmp___ns1__GetUserInfo, "-ns1:GetUserInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetUserInfo(soap, &soap_tmp___ns1__GetUserInfo, "-ns1:GetUserInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UserInfo)
		return soap_closesock(soap);
	ns2__UserInfo->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UserInfo->soap_get(soap, "ns2:UserInfo", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DeleteUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__UserDeletionRequest *ns2__UserDeletionRequest, _ns2__UserDeletionResponse *ns2__UserDeletionResponse)
{	struct __ns1__DeleteUser soap_tmp___ns1__DeleteUser;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:9000/userservice";
	if (!soap_action)
		soap_action = "http://localhost:9000/DeleteUser";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DeleteUser.ns2__UserDeletionRequest = ns2__UserDeletionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteUser(soap, &soap_tmp___ns1__DeleteUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteUser(soap, &soap_tmp___ns1__DeleteUser, "-ns1:DeleteUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteUser(soap, &soap_tmp___ns1__DeleteUser, "-ns1:DeleteUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UserDeletionResponse)
		return soap_closesock(soap);
	ns2__UserDeletionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UserDeletionResponse->soap_get(soap, "ns2:UserDeletionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CreateUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__UserCreationRequest *ns2__UserCreationRequest, _ns2__UserCreationResponse *ns2__UserCreationResponse)
{	struct __ns1__CreateUser soap_tmp___ns1__CreateUser;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:9000/userservice";
	if (!soap_action)
		soap_action = "http://localhost:9000/CreateUser";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CreateUser.ns2__UserCreationRequest = ns2__UserCreationRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__CreateUser(soap, &soap_tmp___ns1__CreateUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreateUser(soap, &soap_tmp___ns1__CreateUser, "-ns1:CreateUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreateUser(soap, &soap_tmp___ns1__CreateUser, "-ns1:CreateUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__UserCreationResponse)
		return soap_closesock(soap);
	ns2__UserCreationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__UserCreationResponse->soap_get(soap, "ns2:UserCreationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CreateGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__GroupCreationRequest *ns2__GroupCreationRequest, _ns2__GroupCreationResponse *ns2__GroupCreationResponse)
{	struct __ns1__CreateGroup soap_tmp___ns1__CreateGroup;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:9000/userservice";
	if (!soap_action)
		soap_action = "http://localhost:9000/CreateGroup";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__CreateGroup.ns2__GroupCreationRequest = ns2__GroupCreationRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__CreateGroup(soap, &soap_tmp___ns1__CreateGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreateGroup(soap, &soap_tmp___ns1__CreateGroup, "-ns1:CreateGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreateGroup(soap, &soap_tmp___ns1__CreateGroup, "-ns1:CreateGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__GroupCreationResponse)
		return soap_closesock(soap);
	ns2__GroupCreationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__GroupCreationResponse->soap_get(soap, "ns2:GroupCreationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DeleteGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__GroupDeletionRequest *ns2__GroupDeletionRequest, _ns2__GroupDeletionResponse *ns2__GroupDeletionResponse)
{	struct __ns1__DeleteGroup soap_tmp___ns1__DeleteGroup;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:9000/userservice";
	if (!soap_action)
		soap_action = "http://localhost:9000/DeleteGroup";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__DeleteGroup.ns2__GroupDeletionRequest = ns2__GroupDeletionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteGroup(soap, &soap_tmp___ns1__DeleteGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteGroup(soap, &soap_tmp___ns1__DeleteGroup, "-ns1:DeleteGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteGroup(soap, &soap_tmp___ns1__DeleteGroup, "-ns1:DeleteGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__GroupDeletionResponse)
		return soap_closesock(soap);
	ns2__GroupDeletionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__GroupDeletionResponse->soap_get(soap, "ns2:GroupDeletionResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GroupAddUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__GroupAddUserRequest *ns2__GroupAddUserRequest, _ns2__GroupAddUserResponse *ns2__GroupAddUserResponse)
{	struct __ns1__GroupAddUser soap_tmp___ns1__GroupAddUser;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:9000/userservice";
	if (!soap_action)
		soap_action = "http://localhost:9000/GroupAddUser";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GroupAddUser.ns2__GroupAddUserRequest = ns2__GroupAddUserRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GroupAddUser(soap, &soap_tmp___ns1__GroupAddUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GroupAddUser(soap, &soap_tmp___ns1__GroupAddUser, "-ns1:GroupAddUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GroupAddUser(soap, &soap_tmp___ns1__GroupAddUser, "-ns1:GroupAddUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__GroupAddUserResponse)
		return soap_closesock(soap);
	ns2__GroupAddUserResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__GroupAddUserResponse->soap_get(soap, "ns2:GroupAddUserResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GroupDeleteUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__GroupDeleteUserRequest *ns2__GroupDeleteUserRequest, _ns2__GroupDeleteUserResponse *ns2__GroupDeleteUserResponse)
{	struct __ns1__GroupDeleteUser soap_tmp___ns1__GroupDeleteUser;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:9000/userservice";
	if (!soap_action)
		soap_action = "http://localhost:9000/GroupDeleteUser";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GroupDeleteUser.ns2__GroupDeleteUserRequest = ns2__GroupDeleteUserRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GroupDeleteUser(soap, &soap_tmp___ns1__GroupDeleteUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GroupDeleteUser(soap, &soap_tmp___ns1__GroupDeleteUser, "-ns1:GroupDeleteUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GroupDeleteUser(soap, &soap_tmp___ns1__GroupDeleteUser, "-ns1:GroupDeleteUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__GroupDeleteUserResponse)
		return soap_closesock(soap);
	ns2__GroupDeleteUserResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__GroupDeleteUserResponse->soap_get(soap, "ns2:GroupDeleteUserResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetGroupInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__GroupInfoRequest *ns2__GroupInfoRequest, _ns2__GroupInfoResponse *ns2__GroupInfoResponse)
{	struct __ns1__GetGroupInfo soap_tmp___ns1__GetGroupInfo;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:9000/userservice";
	if (!soap_action)
		soap_action = "http://localhost:9000/GetGroupInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetGroupInfo.ns2__GroupInfoRequest = ns2__GroupInfoRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GetGroupInfo(soap, &soap_tmp___ns1__GetGroupInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetGroupInfo(soap, &soap_tmp___ns1__GetGroupInfo, "-ns1:GetGroupInfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetGroupInfo(soap, &soap_tmp___ns1__GetGroupInfo, "-ns1:GetGroupInfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__GroupInfoResponse)
		return soap_closesock(soap);
	ns2__GroupInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__GroupInfoResponse->soap_get(soap, "ns2:GroupInfoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */

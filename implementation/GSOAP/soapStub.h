/* soapStub.h
   Generated by gSOAP 2.8.3 from ../userservice.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#include <vector>
#define SOAP_NAMESPACE_OF_ns2	"http://localhost:9000/userservice.xsd"
#include "stdsoap2.h"

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE__ns2__UserInfoRequest
#define SOAP_TYPE__ns2__UserInfoRequest (10)
/* ns2:UserInfoRequest */
class SOAP_CMAC _ns2__UserInfoRequest
{
public:
	std::string username;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 10; } /* = unique id SOAP_TYPE__ns2__UserInfoRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns2__UserInfoRequest() { _ns2__UserInfoRequest::soap_default(NULL); }
	virtual ~_ns2__UserInfoRequest() { }
};
#endif

#ifndef SOAP_TYPE__ns2__UserInfo
#define SOAP_TYPE__ns2__UserInfo (11)
/* ns2:UserInfo */
class SOAP_CMAC _ns2__UserInfo
{
public:
	std::string firstname;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
	std::string lastname;	/* required element of type xsd:string */
	bool gender;	/* required element of type xsd:boolean */
	std::string age;	/* required element of type xsd:integer */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 11; } /* = unique id SOAP_TYPE__ns2__UserInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns2__UserInfo() { _ns2__UserInfo::soap_default(NULL); }
	virtual ~_ns2__UserInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns2__UserDeletionRequest
#define SOAP_TYPE__ns2__UserDeletionRequest (12)
/* ns2:UserDeletionRequest */
class SOAP_CMAC _ns2__UserDeletionRequest
{
public:
	std::string username;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 12; } /* = unique id SOAP_TYPE__ns2__UserDeletionRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns2__UserDeletionRequest() { _ns2__UserDeletionRequest::soap_default(NULL); }
	virtual ~_ns2__UserDeletionRequest() { }
};
#endif

#ifndef SOAP_TYPE__ns2__UserDeletionResponse
#define SOAP_TYPE__ns2__UserDeletionResponse (13)
/* ns2:UserDeletionResponse */
class SOAP_CMAC _ns2__UserDeletionResponse
{
public:
	bool response;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 13; } /* = unique id SOAP_TYPE__ns2__UserDeletionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns2__UserDeletionResponse() { _ns2__UserDeletionResponse::soap_default(NULL); }
	virtual ~_ns2__UserDeletionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns2__UserCreationRequest
#define SOAP_TYPE__ns2__UserCreationRequest (14)
/* ns2:UserCreationRequest */
class SOAP_CMAC _ns2__UserCreationRequest
{
public:
	std::string username;	/* required element of type xsd:string */
	std::string firstname;	/* required element of type xsd:string */
	std::string lastname;	/* required element of type xsd:string */
	bool gender;	/* required element of type xsd:boolean */
	std::string age;	/* required element of type xsd:integer */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 14; } /* = unique id SOAP_TYPE__ns2__UserCreationRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns2__UserCreationRequest() { _ns2__UserCreationRequest::soap_default(NULL); }
	virtual ~_ns2__UserCreationRequest() { }
};
#endif

#ifndef SOAP_TYPE__ns2__UserCreationResponse
#define SOAP_TYPE__ns2__UserCreationResponse (15)
/* ns2:UserCreationResponse */
class SOAP_CMAC _ns2__UserCreationResponse
{
public:
	bool response;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 15; } /* = unique id SOAP_TYPE__ns2__UserCreationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns2__UserCreationResponse() { _ns2__UserCreationResponse::soap_default(NULL); }
	virtual ~_ns2__UserCreationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns2__GroupCreationRequest
#define SOAP_TYPE__ns2__GroupCreationRequest (16)
/* ns2:GroupCreationRequest */
class SOAP_CMAC _ns2__GroupCreationRequest
{
public:
	std::string groupname;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 16; } /* = unique id SOAP_TYPE__ns2__GroupCreationRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns2__GroupCreationRequest() { _ns2__GroupCreationRequest::soap_default(NULL); }
	virtual ~_ns2__GroupCreationRequest() { }
};
#endif

#ifndef SOAP_TYPE__ns2__GroupCreationResponse
#define SOAP_TYPE__ns2__GroupCreationResponse (17)
/* ns2:GroupCreationResponse */
class SOAP_CMAC _ns2__GroupCreationResponse
{
public:
	bool response;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 17; } /* = unique id SOAP_TYPE__ns2__GroupCreationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns2__GroupCreationResponse() { _ns2__GroupCreationResponse::soap_default(NULL); }
	virtual ~_ns2__GroupCreationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns2__GroupDeletionRequest
#define SOAP_TYPE__ns2__GroupDeletionRequest (18)
/* ns2:GroupDeletionRequest */
class SOAP_CMAC _ns2__GroupDeletionRequest
{
public:
	std::string groupname;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 18; } /* = unique id SOAP_TYPE__ns2__GroupDeletionRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns2__GroupDeletionRequest() { _ns2__GroupDeletionRequest::soap_default(NULL); }
	virtual ~_ns2__GroupDeletionRequest() { }
};
#endif

#ifndef SOAP_TYPE__ns2__GroupDeletionResponse
#define SOAP_TYPE__ns2__GroupDeletionResponse (19)
/* ns2:GroupDeletionResponse */
class SOAP_CMAC _ns2__GroupDeletionResponse
{
public:
	bool response;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 19; } /* = unique id SOAP_TYPE__ns2__GroupDeletionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns2__GroupDeletionResponse() { _ns2__GroupDeletionResponse::soap_default(NULL); }
	virtual ~_ns2__GroupDeletionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns2__GroupAddUserRequest
#define SOAP_TYPE__ns2__GroupAddUserRequest (20)
/* ns2:GroupAddUserRequest */
class SOAP_CMAC _ns2__GroupAddUserRequest
{
public:
	std::string username;	/* required element of type xsd:string */
	std::string groupname;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 20; } /* = unique id SOAP_TYPE__ns2__GroupAddUserRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns2__GroupAddUserRequest() { _ns2__GroupAddUserRequest::soap_default(NULL); }
	virtual ~_ns2__GroupAddUserRequest() { }
};
#endif

#ifndef SOAP_TYPE__ns2__GroupAddUserResponse
#define SOAP_TYPE__ns2__GroupAddUserResponse (21)
/* ns2:GroupAddUserResponse */
class SOAP_CMAC _ns2__GroupAddUserResponse
{
public:
	bool response;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 21; } /* = unique id SOAP_TYPE__ns2__GroupAddUserResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns2__GroupAddUserResponse() { _ns2__GroupAddUserResponse::soap_default(NULL); }
	virtual ~_ns2__GroupAddUserResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns2__GroupDeleteUserRequest
#define SOAP_TYPE__ns2__GroupDeleteUserRequest (22)
/* ns2:GroupDeleteUserRequest */
class SOAP_CMAC _ns2__GroupDeleteUserRequest
{
public:
	std::string username;	/* required element of type xsd:string */
	std::string groupname;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 22; } /* = unique id SOAP_TYPE__ns2__GroupDeleteUserRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns2__GroupDeleteUserRequest() { _ns2__GroupDeleteUserRequest::soap_default(NULL); }
	virtual ~_ns2__GroupDeleteUserRequest() { }
};
#endif

#ifndef SOAP_TYPE__ns2__GroupDeleteUserResponse
#define SOAP_TYPE__ns2__GroupDeleteUserResponse (23)
/* ns2:GroupDeleteUserResponse */
class SOAP_CMAC _ns2__GroupDeleteUserResponse
{
public:
	bool response;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 23; } /* = unique id SOAP_TYPE__ns2__GroupDeleteUserResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns2__GroupDeleteUserResponse() { _ns2__GroupDeleteUserResponse::soap_default(NULL); }
	virtual ~_ns2__GroupDeleteUserResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns2__GroupInfoRequest
#define SOAP_TYPE__ns2__GroupInfoRequest (24)
/* ns2:GroupInfoRequest */
class SOAP_CMAC _ns2__GroupInfoRequest
{
public:
	std::string groupname;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 24; } /* = unique id SOAP_TYPE__ns2__GroupInfoRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns2__GroupInfoRequest() { _ns2__GroupInfoRequest::soap_default(NULL); }
	virtual ~_ns2__GroupInfoRequest() { }
};
#endif

#ifndef SOAP_TYPE__ns2__GroupInfoResponse
#define SOAP_TYPE__ns2__GroupInfoResponse (25)
/* ns2:GroupInfoResponse */
class SOAP_CMAC _ns2__GroupInfoResponse
{
public:
	std::vector<std::string >userlist;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 25; } /* = unique id SOAP_TYPE__ns2__GroupInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns2__GroupInfoResponse() { _ns2__GroupInfoResponse::soap_default(NULL); }
	virtual ~_ns2__GroupInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE___ns1__GetUserInfo
#define SOAP_TYPE___ns1__GetUserInfo (32)
/* Operation wrapper: */
struct __ns1__GetUserInfo
{
public:
	_ns2__UserInfoRequest *ns2__UserInfoRequest;	/* optional element of type ns2:UserInfoRequest */
};
#endif

#ifndef SOAP_TYPE___ns1__DeleteUser
#define SOAP_TYPE___ns1__DeleteUser (36)
/* Operation wrapper: */
struct __ns1__DeleteUser
{
public:
	_ns2__UserDeletionRequest *ns2__UserDeletionRequest;	/* optional element of type ns2:UserDeletionRequest */
};
#endif

#ifndef SOAP_TYPE___ns1__CreateUser
#define SOAP_TYPE___ns1__CreateUser (40)
/* Operation wrapper: */
struct __ns1__CreateUser
{
public:
	_ns2__UserCreationRequest *ns2__UserCreationRequest;	/* optional element of type ns2:UserCreationRequest */
};
#endif

#ifndef SOAP_TYPE___ns1__CreateGroup
#define SOAP_TYPE___ns1__CreateGroup (44)
/* Operation wrapper: */
struct __ns1__CreateGroup
{
public:
	_ns2__GroupCreationRequest *ns2__GroupCreationRequest;	/* optional element of type ns2:GroupCreationRequest */
};
#endif

#ifndef SOAP_TYPE___ns1__DeleteGroup
#define SOAP_TYPE___ns1__DeleteGroup (48)
/* Operation wrapper: */
struct __ns1__DeleteGroup
{
public:
	_ns2__GroupDeletionRequest *ns2__GroupDeletionRequest;	/* optional element of type ns2:GroupDeletionRequest */
};
#endif

#ifndef SOAP_TYPE___ns1__GroupAddUser
#define SOAP_TYPE___ns1__GroupAddUser (52)
/* Operation wrapper: */
struct __ns1__GroupAddUser
{
public:
	_ns2__GroupAddUserRequest *ns2__GroupAddUserRequest;	/* optional element of type ns2:GroupAddUserRequest */
};
#endif

#ifndef SOAP_TYPE___ns1__GroupDeleteUser
#define SOAP_TYPE___ns1__GroupDeleteUser (56)
/* Operation wrapper: */
struct __ns1__GroupDeleteUser
{
public:
	_ns2__GroupDeleteUserRequest *ns2__GroupDeleteUserRequest;	/* optional element of type ns2:GroupDeleteUserRequest */
};
#endif

#ifndef SOAP_TYPE___ns1__GetGroupInfo
#define SOAP_TYPE___ns1__GetGroupInfo (60)
/* Operation wrapper: */
struct __ns1__GetGroupInfo
{
public:
	_ns2__GroupInfoRequest *ns2__GroupInfoRequest;	/* optional element of type ns2:GroupInfoRequest */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (61)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (62)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (64)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (67)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (68)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_xsd__integer
#define SOAP_TYPE_xsd__integer (9)
typedef std::string xsd__integer;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 __ns1__GetUserInfo(struct soap*, _ns2__UserInfoRequest *ns2__UserInfoRequest, _ns2__UserInfo *ns2__UserInfo);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__DeleteUser(struct soap*, _ns2__UserDeletionRequest *ns2__UserDeletionRequest, _ns2__UserDeletionResponse *ns2__UserDeletionResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__CreateUser(struct soap*, _ns2__UserCreationRequest *ns2__UserCreationRequest, _ns2__UserCreationResponse *ns2__UserCreationResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__CreateGroup(struct soap*, _ns2__GroupCreationRequest *ns2__GroupCreationRequest, _ns2__GroupCreationResponse *ns2__GroupCreationResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__DeleteGroup(struct soap*, _ns2__GroupDeletionRequest *ns2__GroupDeletionRequest, _ns2__GroupDeletionResponse *ns2__GroupDeletionResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__GroupAddUser(struct soap*, _ns2__GroupAddUserRequest *ns2__GroupAddUserRequest, _ns2__GroupAddUserResponse *ns2__GroupAddUserResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__GroupDeleteUser(struct soap*, _ns2__GroupDeleteUserRequest *ns2__GroupDeleteUserRequest, _ns2__GroupDeleteUserResponse *ns2__GroupDeleteUserResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__GetGroupInfo(struct soap*, _ns2__GroupInfoRequest *ns2__GroupInfoRequest, _ns2__GroupInfoResponse *ns2__GroupInfoResponse);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GetUserInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__DeleteUser(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__CreateUser(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__CreateGroup(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__DeleteGroup(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GroupAddUser(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GroupDeleteUser(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GetGroupInfo(struct soap*);

/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetUserInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__UserInfoRequest *ns2__UserInfoRequest, _ns2__UserInfo *ns2__UserInfo);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DeleteUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__UserDeletionRequest *ns2__UserDeletionRequest, _ns2__UserDeletionResponse *ns2__UserDeletionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CreateUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__UserCreationRequest *ns2__UserCreationRequest, _ns2__UserCreationResponse *ns2__UserCreationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CreateGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__GroupCreationRequest *ns2__GroupCreationRequest, _ns2__GroupCreationResponse *ns2__GroupCreationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DeleteGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__GroupDeletionRequest *ns2__GroupDeletionRequest, _ns2__GroupDeletionResponse *ns2__GroupDeletionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GroupAddUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__GroupAddUserRequest *ns2__GroupAddUserRequest, _ns2__GroupAddUserResponse *ns2__GroupAddUserResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GroupDeleteUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__GroupDeleteUserRequest *ns2__GroupDeleteUserRequest, _ns2__GroupDeleteUserResponse *ns2__GroupDeleteUserResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetGroupInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__GroupInfoRequest *ns2__GroupInfoRequest, _ns2__GroupInfoResponse *ns2__GroupInfoResponse);

#endif

/* End of soapStub.h */
